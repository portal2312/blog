# 작업 전 VMware 의 경우
: Edit > Virtual Network Editor > Add Network > Bridged 할 것.

﻿[목차]
1. nmcli (NETWORKMANAGER COMMAND LINE TOOL)  사용하기    - Centos 7.x
2. 이전 방법 (ifconfig 사용하기)    - Centos 6.x  또는 7.x
3. gnome(xwindow ) 에서 설정하기    - Centos 7.x


[내용]
1. nmcli (NETWORKMANAGER COMMAND LINE TOOL)  사용하기    - Centos 7.x
- [중요] tab 키 활용, help 명령어 활용
명령어 입력하면서 [tab] 키를 누르면 사용가능한 목록이 나오므로 명령어 입력전 한번씩 확인하면서 진행하도록 하자.
- centos 7 부터 명령어 단어가 축약되어 사용가능하다. 하지만 배우는 입장으로써 단어의 의미를 생각하며 full name으로 사용했다.
> nmcli help
Usage: nmcli [OPTIONS] OBJECT { COMMAND | help }

OPTIONS
  -t[erse]                                   terse output
  -p[retty]                                  pretty output
  -m[ode] tabular|multiline                  output mode
  -f[ields] <field1,field2,...>|all|common   specify fields to output
  -e[scape] yes|no                           escape columns separators in values
  -n[ocheck]                                 don't check nmcli and NetworkManager versions
  -a[sk]                                     ask for missing parameters
  -w[ait] <seconds>                          set timeout waiting for finishing operations
  -v[ersion]                                 show program version
  -h[elp]                                    print this help

OBJECT
  g[eneral]       NetworkManager's general status and operations
  (general 명령어는 만 g로 입력 가능, 축약가능한 상태와 명령어에 대한 설명이 보임)
  n[etworking]    overall networking control
  r[adio]         NetworkManager radio switches
  c[onnection]    NetworkManager's connections
  d[evice]        devices managed by NetworkManager

(1) 네트워크 상태 확인하기
확인하는 방법은 다양하다. general show나 status 로 확인:
> nmcli device status
> nmcli device show
> nmcli general 명령어

(2) 연결중인 네트워크 보기
> nmcli connection show              (= nmcli con show)
> nmcli connection show --active    (= nmcli con show -a   로 축약 가능함)

(3) 네트워크 on/off
> nmcli connection up id eth명         (up <반대> down)
> nmcli device connection id eth명    (connection <반대> disconnection)

(4) 새로운 네트워크 등록하기
(4-1) 변경 전, 네트워크 장비 상태 확인
> nmcli device status
--- [출력 메시지] ---
장치         유형      상태           CONNECTION
eno16777736  ethernet  연결됨         자동 이더넷
lo           loopback  관리되지 않음  --

(4-2) ifname 은 실제 사용 가능한 목록을 선택할 것
> nmcli connection add type ethernet con-name eth명 ifname eno16777736 ip4 1.1.1.1/24 gw4 1.1.1.254

24 는 넷마스크(netmask, Mask, mask)다. 앞에서 부터 24개 비트로 구성된 것을 의미한다.
즉, 1111 1111.1111 1111.1111 1111.0000 0000 이렇게 표현된다.
[2진수]           1     1    1    1     1   1   1   1  . 생략
[10진수]  255 = 128 + 64 + 32 + 16   + 8 + 4 + 2 + 1  . 생략

예로 넷마스크 값을 255.255.255.255 로 하고 싶다면 32 로 하면 된다.

(4-2) 등록여부 확인, 그리고 연결, 그리고 연결 확인 (등록만 되고 바로 연결되는 것은 아니다)
> nmcli connection show
> nmcli connection up eth명
> nmcli device status
[출력]
장치         유형      상태           CONNECTION
eno16777736  ethernet  연결됨         eth명
lo           loopback  관리되지 않음  --
-----------------------------------------------

(4-3) 등록된 eth 삭제
삭제, id 까지 입력후 [tab]키를 누르면 삭제 가능한 목록들이 자동으로 나온다:
> nmcli connection delete id eth명

(4-3) modify 명령어 사용하기 (고정 IP 로 변경)
> nmcli connection modify help
--- [출력 메시지] ----
Usage: nmcli connection modify { ARGUMENTS | help }

ARGUMENTS := [id | uuid | path] <ID> ([+|-]<setting>.<property> <value>)+

Modify one or more properties of the connection profile.
The profile is identified by its name, UUID or D-Bus path.
For multi-valued properties you can use optional '+' or '-' prefix to the property name.
The '+' sign allows appending items instead of overwriting the whole value.
The '-' sign allows removing selected items instead of the whole value.

Examples:  (친절하게 예제도 나옴)
nmcli con mod home-wifi wifi.ssid rakosnicek
nmcli con mod em1-1 ipv4.method manual ipv4.addr "192.168.1.2/24, 10.10.1.5/8"
nmcli con mod em1-1 +ipv4.dns 8.8.4.4
nmcli con mod em1-1 -ipv4.dns 1
nmcli con mod em1-1 -ipv6.addr "abbe::cafe/56"
nmcli con mod bond0 +bond.options mii=500

nmcli con mod bond0 -bond.options downdelay


> nmcli connection modify id eth명 ipv4.addresses "10.1.1.1/24 10.1.1.254"   (= "IP주소/넷마스크 게이트웨이")

콤마(',')로 구분하면 my_office 네트워크명안에 사용 가능한 IP 대역을 여러개 등록할 수 있다:
예) "10.1.1.1/24 10.1.1.254, 20.2.2.2/24 10.1.1.254"

고정 IP 설정, manual = static 으로 입력해도 된다:
> nmcli connection modify id eth명 ipv4.method manual

띄어쓰기는 2개를 추가한다는 것을 의미함, 주의 - 덮어쓰기 된다:
> nmcli connection modify id eth명 ipv4.dns "1.1.1.1 2.2.2.2"

"+" 기존에 추가:
> nmcli connection modify id eth명 +ipv4.dns "3.3.3.3"

"-" 기존에서 삭제:
> nmcli connection modify id eth명 -ipv4.dns "3.3.3.3"

확인:
> nmcli --pretty connection show id eth명

입력을 하면 바로 config에 바로 기록은 되어 save되지만 up/down 으로 재구동하는 것이 좋다.

나머지는
> nmcli connection modify id eth명 입력 후 [tab 키]를 하면 변경가능한 목록들이 나온다.
확인 후 필요한 부분을 직접 입력하면 된다.
또는
nmcli -p connection show id eth명
을 하면 현재 eth명 의 설정 가능한 Value 값을 확인할 수 있다.
Value 은 유추하거나 웹 서핑으로 확인해서 입력한다.
추상적으로 설명하고 있지만 아무것도 몰랐을 때 실무적으로 찾아보는 방법 중 하나를 작성한 것이다.


(5) edit 명령어 사용하기
다음과 같이 대화 형 편집기를 사용하여 동적 이더넷 연결을 구성하려면 edit 명령어를 사용하면 편집기가 열리는데 그곳에서 수정한다:
> nmcli connection edit id eth명
nmcli> help
--- [출력 메시지] ----
------------------------------------------------------------------------------
---[ Main menu ]---
goto     [<setting> | <prop>]  :: go to a setting or property  (= 속성에 대해 접근하여 상세한 명령어를 실행시킬 수 있음, remove등..)
remove   <setting>[.<prop>] | <prop> :: remove setting or reset property value
set      [<setting>.<prop> <value>]  :: set property value
describe [<setting>.<prop>]          :: describe property         (= 속성에 대한 설명과 속성 값에 대한 사용 예를 보여줌)
print    [all]                       :: print the connection
verify   [all]                       :: verify the connection
save     [persistent|temporary]      :: save the connection
activate [<ifname>] [/<ap>|<nsp>]    :: activate the connection
back                                 :: go one level up (back)
help/?   [<command>]                 :: print this help
nmcli    <conf-option> <value>       :: nmcli configuration
quit                                 :: exit nmcli
------------------------------------------------------------------------------
nmcli> describe ipv4.dns
--- [출력 메시지] ----
=== [dns] ===
[NM property description]
List of DNS servers (network byte order). For the 'auto' method, these DNS servers are appended to those (if any) returned by automatic configuration.  DNS servers cannot be used with the 'shared', 'link-local', or 'disabled' methods as there is no upstream network.  In all other methods, these DNS servers are used as the only DNS servers for this connection.

[nmcli specific description]
Enter a list of IPv4 addresses of DNS servers.


Example: 8.8.8.8, 8.8.4.4

nmcli> set ipv4.dns 1.1.1.3
nmcli> save
nmcli> goto ipv4.dns     (= ipv4.dns 속성으로 이동)
nmcli ipv4.dns> help     (= help 짱짱맨)
------------------------------------------------------------------------------
---[ Property menu ]---
set      [<value>]               :: set new value
add      [<value>]               :: add new option to the property
change                           :: change current value
remove   [<index> | <option>]    :: delete the value
describe                         :: describe property
print    [setting | connection]  :: print property (setting/connection) value(s)
back                             :: go to upper level
help/?   [<command>]             :: print this help or command description
quit                             :: exit nmcli

------------------------------------------------------------------------------

nmcli ipv4.dns> remove 1.1.1.3  (= 삭제)
nmcli ipv4.dns> back             (= 이전 속성으로)
nmcli> save                       (= 저장)
nmcli> quit


(6) Wi-Fi   (이 내용은 실제 테스트할 수 없어 번역해서 적어 놓음)
(6-1) 연결을 추가
다음과 같이 사용 가능한 Wi-Fi 액세스 포인트를 보려면, 명령을 실행한다:
> nmcli dev wifi list
  SSID            MODE  CHAN  RATE     SIGNAL  BARS  SECURITY
  FedoraTest     Infra  11    54 MB/s  98      ▂▄▆█  WPA1
  Red Hat Guest  Infra  6     54 MB/s  97      ▂▄▆█  WPA2
  Red Hat        Infra  6     54 MB/s  77      ▂▄▆_  WPA2 802.1X
* Red Hat        Infra  40    54 MB/s  66      ▂▄▆_  WPA2 802.1X
  VoIP           Infra  1     54 MB/s  32      ▂▄__  WEP
  MyCafe         Infra  11    54 MB/s  39      ▂▄__  WPA2

고정 IP 구성으로 Wi-Fi 연결 프로파일을 생성하지만, 다음과 같이 수 있도록 자동으로 DNS 주소 할당은, 명령을 실행한다:
> nmcli con add con-name MyCafe ifname wlan0 type wifi ssid MyCafe \ip4 192.168.100.101/24 gw4 192.168.100.1

다음과 같이 WPA2 암호를 설정하려면, 예를 들어 "caffeine"에 대한 명령어 실행이다:
> nmcli con modify MyCafe wifi-sec.key-mgmt wpa-psk
> nmcli con modify MyCafe wifi-sec.psk caffeine

암호 보안에 대한 자세한 내용은 레드햇 엔터프라이즈 리눅스 (7) 보안 설명서를 참조하십시오.
Wi-Fi 상태 변경하려면 다음과 같은 형식으로 명령을 실행합니다
> nmcli radio wifi [on | off ]

(6-2) 특정 속성 변경 (modify 사용하기)
> nmcli connection show id 'MyCafe' | grep mtu
802-11-wireless.mtu:                     auto
> nmcli connection modify id 'MyCafe' 802-11-wireless.mtu 1350
> nmcli connection show id 'MyCafe' | grep mtu
802-11-wireless.mtu:                     1350

(7) 고정 Routes 설정 (edit 사용하기)
> nmcli connection edit id eth명
nmcli> set ipv4.routes 192.168.122.0/24 10.10.10.1
nmcli> save persistent
Saving the connection with 'autoconnect=yes'. That might result in an immediate activation of the connection.
Do you still want to save? [yes] yes
Connection 'ens3' (704a5666-8cbd-4d89-b5f9-fa65a3dbc916) successfully saved.
nmcli> quit


[참조] nmcli 에 대해 참조한 내용입니다.
https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Networking_Guide/sec-Using_the_NetworkManager_Command_Line_Tool_nmcli.html


2. 이전 방법 (ifconfig 사용하기)    - Centos 6.x  또는 7.x
현재 IP 확인, 단 ifconfig 는 net-tools.x86_64 모듈을 설치해야 한다:
> ip addr show 또는 > ifconfig

현재 라우팅정보 확인, ping 확인:
> netstat -nr
> ping 8.8.8.8   (= 외부 IP로 통신가능한지 확인)

자동IP, 고정IP 비교:
폴더 경로: /etc/sysconfig/network-scripts/

 eth0 / 자동 IP / 자동 접속
 eth1 / 고정 IP / 자동 접속
 root#> vi /etc/sysconfig/network-scripts/ifcfg-eth0
 root#> /etc/sysconfig/network-scripts/ifcfg-eth1
DEVICE=eth0    (실제 등록된 장네트워크 장비)
TYPE=Ethernet
UUID=4b9eefb7-1381-499f-b369-cad66bc60dc0    (고유값)
ONBOOT=yes
NM_CONTROLLED=yes
BOOTPROTO=dhcp    (dhcp = 자동 IP 설정)
DEFROUTE=yes
IPV4_FAILURE_FATAL=yes
IPV6INIT=no
NAME="System eth0"
HWADDR=00:0C:29:8E:B3:8F  (실제 등록된 네트워크 장비 MAC)
PEERDNS=yes
PEERROUTES=yes
LAST_CONNECT=1422938134

TYPE=Ethernet
UUID=c34ed8e9-4e12-4f65-8a29-34ca72ad954e
ONBOOT=yes
DEFROUTE=yes
BOOTPROTO=none
IPV4_FAILURE_FATAL=yes
IPV6INIT=no
NAME="System eth1"    (추가된 값)
IPADDR=***.***.***.57    (추가된 값)
PREFIX=24    (추가된 값)
GATEWAY=***.***.***.254    (추가된 값)
DNS1=***.**.***.1    (추가된 값)
DNS1=***.**.***.2    (추가된 값)

eth0을 자동 IP -> 고정 IP 으로 변경:
#> vi /etc/sysconfig/network-scripts/ifcfg-eth0

DEVICE=eth0
TYPE=Ethernet
UUID=4b9eefb7-1381-499f-b369-cad66bc60dc0
ONBOOT=yes
NM_CONTROLLED=yes
BOOTPROTO=none
DEFROUTE=yes
IPV4_FAILURE_FATAL=yes
IPV6INIT=no
NAME="System eth0"
HWADDR=00:0C:29:8E:B3:8F
IPADDR=***.***.***.57
PREFIX=24
GATEWAY=***.***.***.254
DNS1=***.**.***.1
DNS2=***.**.***.2
LAST_CONNECT=1422943534

재시작:
root#> ifup eth0         (시작)
root#> ifdown eth0      (종료)


3. gnome(xwindow ) 에서 설정하기    - Centos 7.x




(1) 작성
이름: 처음 linux 설치시 보통 eth0 으로 시작한다. add 하는 부분이니까 eth1로 만들자.
MAC주소: 선택하는 부분이 있는데 기본 설정을 선택.
자동연결: 선택사항


(2) IPv4 작성
주소 부분에 "자동(DHCP)"를 "수동"으로 변경.
textbox가 나옴. 원하는 값을 입력.
DNS, 라우팅 원하는 값을 입력.


(3) 변경
터미널(console) 창을 연다.
ifdown "현재 적용중인 네트워크 명"
ifup "변경할 네트워크 명"
(먼저 down 후 up 할 것)

(4) 확인
#> ifconfig  (안된 다면)
#> ip addr show
(ifconfig 명령어는 centOS 7 부터 ip 명령어로 변경됨, ifconfig 라이브러리를 설치하면 사용가능함)


# Reference.URL

https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Networking_Guide/part-IP_Networking.html
